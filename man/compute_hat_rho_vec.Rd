% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/goodness_of_fit.R
\name{compute_hat_rho_vec}
\alias{compute_hat_rho_vec}
\title{Vectorized rho_X for k = 0 to r (Internal Helper)}
\usage{
compute_hat_rho_vec(x, mu, phi, r)
}
\arguments{
\item{x}{Numeric sample data.}

\item{mu}{Numeric location parameter \eqn{\mu}.}

\item{phi}{Numeric dispersion parameter \eqn{\phi}.}

\item{r}{Maximum value of \eqn{k} to compute \eqn{\hat{\rho}_X(k)} for. This is typically \code{max(x)}
from the input sample.}
}
\value{
A numeric vector of \eqn{\hat{\rho}_X(k)} values for \eqn{k = 0, \ldots, r}.
}
\description{
This internal helper function efficiently computes the estimated Stein-based probabilities
\eqn{\hat{\rho}_X(k)} for a range of \eqn{k} values, specifically from 0 up to the maximum observed
value \eqn{r} in the sample. It uses the \code{\link{estimate_rho_mCMP}} function for each \eqn{k}.
This vectorized approach is used to construct the estimated PMF based on Stein's characterization.
}
\examples{
# Simulate some mCMP data
set.seed(123)
sample_data <- simulate_mcmp_sample(n = 20, mu = 3, phi = -0.5)

# Compute rho_X(k) for k from 0 to max(sample_data)
max_val <- max(sample_data)
hat_rho_values <- compute_hat_rho_vec(x = sample_data, mu = 3, phi = -0.5, r = max_val)
names(hat_rho_values) <- 0:max_val # Assign names for clarity
print(hat_rho_values)

# These values represent the estimated PMF based on Stein's characterization.
}
